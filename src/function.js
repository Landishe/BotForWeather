function getTemperature(weatherResult){
    if (weatherResult.data.current.temperature_2m >= 30) {
        return '–æ—á–µ–Ω—å –∂–∞—Ä–∫–æ';
    } else if (weatherResult.data.current.temperature_2m >= 25){
        return '–∂–∞—Ä–∫–æ';
    } else if (weatherResult.data.current.temperature_2m >= 20){
        return '–æ—á–µ–Ω—å —Ç–µ–ø–ª–æ';
    } else if (weatherResult.data.current.temperature_2m >= 15){
        return '–∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ';
    } else if (weatherResult.data.current.temperature_2m >= 10){
        return '–ø—Ä–æ—Ö–ª–∞–¥–Ω–æ';
    } else if (weatherResult.data.current.temperature_2m >= 0){
        return '—Ö–æ–ª–æ–¥–Ω–æ';
    } else {
        return '–æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ';
    }
}

function getWeatherCode(weatherResult){
    switch(weatherResult.data.current.weather_code) {
        case 0: return '—è—Å–Ω–æ‚òÄÔ∏è';
        case 1: return '–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ —è—Å–Ω–æüå§';
        case 2: return '–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å‚õÖÔ∏è';
        case 3: return '–ø–∞—Å–º—É—Ä–Ω–æüåß';
        case 45: case 48: return '—Ç—É–º–∞–Ωüå´';
        case 51: case 53: case 55: return '–º–æ—Ä–æ—Å—å‚òîÔ∏è';
        case 56: case 57: return '–ª–µ–¥—è–Ω–∞—è –º–æ—Ä–æ—Å—åüí¶';
        case 61: case 63: case 65: return '–¥–æ–∂–¥—åüåß';
        case 66: case 67: return '–ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—åüåß';
        case 71: case 73: case 75: return '—Å–Ω–µ–≥üåß';
        case 77: return '—Å–Ω–µ–∂–Ω—ã–µ –∑–µ—Ä–Ω–∞üåß';
        case 80: case 81: case 82: return '–ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å‚õà';
        case 85: case 86: return "–ª–∏–≤–Ω–µ–≤—ã–π —Å–Ω–µ–≥üåß";
        case 95: case 96: case 99: return "–≥—Ä–æ–∑–∞‚ö°Ô∏è";
        default: return "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
    }
}

function getClothingRecomendation(weatherResult){
    var recommendation = []
    if (weatherResult.data.current.temperature_2m >= 25) {
        recommendation.push('—Ñ—É—Ç–±–æ–ª–∫—Éüëï', '—à–æ—Ä—Ç—ã', '—Å–æ–ª–Ω–µ—á–Ω—ã–µ –æ—á–∫–∏üï∂')
    } else if (weatherResult.data.current.temperature_2m >= 15) {
        recommendation.push('–∫–æ—Ñ—Ç—É –∏–ª–∏ –≤–µ—Ç—Ä–æ–≤–∫—É')
    } else if (weatherResult.data.current.temperature_2m >= 5){
        recommendation.push("–ø–∞–ª—å—Ç–æ –∏–ª–∏ –∫—É—Ä—Ç–∫—É", "–∫–æ—Ñ—Ç—É")
    } else ("—Ç–µ–ø–ª–æ–µ –ø–∞–ª—å—Ç–æ", "—à–∞–ø–∫—É", "–ø–µ—Ä—á–∞—Ç–∫–∏")

    if (weatherResult.data.current.weather_code == 0 || weatherResult.data.current.weather_code == 1){
        recommendation.push("—Å–æ–ª–Ω–µ—á–Ω—ã–µ –æ—á–∫–∏")
    } else if (weatherResult.data.current.weather_code >= 57 || weatherResult.data.current.weather_code <= 67){
        recommendation.push('–∑–æ–Ω—Ç –∏–ª–∏ –¥–æ–∂–¥–µ–≤–∏–∫')
    } else if (weatherResult.data.current.weather_code >= 71 || weatherResult.data.current.weather_code <= 86){
        recommendation.push('–∑–æ–Ω—Ç –∏ —Ç–µ–ø–ª—É—é –æ–±—É–≤—å')
    } else if (weatherResult.data.current.weather_code >= 95 || weatherResult.data.current.weather_code <= 99){
        recommendation.push('–ù–µ –≤—ã—Ö–æ–¥–∏—Ç—å –Ω–∞ —É–ª–∏—Ü—É –ø–æ–∫–∞ –∏–¥–µ—Ç –≥—Ä–æ–∑–∞')
    }
    return recommendation
}

function getWeeklyAverage(weatherResult) {
    var sum = weatherResult.data.daily.temperature_2m_max.reduce(function(a, b){
        return a + b;
    }, 0);
    return (sum / weatherResult.data.daily.temperature_2m_max.length).toFixed(1);
}

function getWeeklyGeneralAdvice(weatherResult){
    var avgTemp = getWeeklyAverage(weatherResult)
    
    if (avgTemp >= 20) {
        return {
            mood: "—Ç–µ–ø–ª–æ üå§Ô∏è",
            advice: "–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –±—É–¥–µ—Ç —Ç–µ–ø–ª–æ - –æ—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–æ–≥—É–ª–æ–∫ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ",
            emoji: "üòä"
        };
    } else if (avgTemp >= 15) {
        return {
            mood: "–∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ üåº", 
            advice: "–ù–∞ –Ω–µ–¥–µ–ª–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ - –º–æ–∂–Ω–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —É–ª–∏—Ü–µ",
            emoji: "üëç"
        };
    } else if (avgTemp >= 10) {
        return {
            mood: "–ø—Ä–æ—Ö–ª–∞–¥–Ω–æ üçÇ",
            advice: "–ù–∞ –Ω–µ–¥–µ–ª–µ –±—É–¥–µ—Ç –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ - –µ—Å–ª–∏ –±—É–¥–µ—Ç–µ –≥—É–ª—è—Ç—å, –≤–æ–∑—å–º–∏—Ç–µ –∫–æ—Ñ—Ç—É –∏–ª–∏ –≤–µ—Ç—Ä–æ–≤–∫—É",
            emoji: "üß•"
        };
    } else if (avgTemp >= 5) {
        return {
            mood: "—Ö–æ–ª–æ–¥–Ω–æ ‚ùÑÔ∏è",
            advice: "–ù–∞ –Ω–µ–¥–µ–ª–µ –æ–∂–∏–¥–∞–µ—Ç—Å—è —Ö–æ–ª–æ–¥–Ω–æ - –¥–ª—è –ø—Ä–æ–≥—É–ª–æ–∫ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–µ–ø–ª–∞—è –æ–¥–µ–∂–¥–∞",
            emoji: "üß§"
        };
    } else if (avgTemp >= 0) {
        return {
            mood: "–æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ ü•∂",
            advice: "–ù–∞ –Ω–µ–¥–µ–ª–µ –±—É–¥–µ—Ç –æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ - –æ–¥–µ–≤–∞–π—Ç–µ—Å—å —Ç–µ–ø–ª–µ–µ, –µ—Å–ª–∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤—ã—Ö–æ–¥–∏—Ç—å",
            emoji: "üß£"
        };
    } else {
        return {
            mood: "–º–æ—Ä–æ–∑–Ω–æ ‚õÑ",
            advice: "–ù–∞ –Ω–µ–¥–µ–ª–µ –º–æ—Ä–æ–∑–Ω–æ - –ª—É—á—à–µ –æ—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –≤ —Ç–µ–ø–ª–µ, –æ–≥—Ä–∞–Ω–∏—á—å—Ç–µ –≤—Ä–µ–º—è –Ω–∞ —É–ª–∏—Ü–µ",
            emoji: "üè†"
        };
    }
}

function getTemperatureRange(weatherResult) {
    var temperatures = weatherResult.data.daily.temperature_2m_max;
    log(temperatures)
    
    var min = temperatures[0];
    for (var i = 1; i < temperatures.length; i++) {
        if (temperatures[i] < min) {
            min = temperatures[i];
        }
    }
    
    var max = temperatures[0];
    for (var i = 1; i < temperatures.length; i++) {
        if (temperatures[i] > max) {
            max = temperatures[i];
        }
    }
    
    
    var range = max - min;
    
    return {
        min: min,
        max: max,
        range: range.toFixed(1),
        hasBigChanges: range > 10,
    };
}
function getRangeAdvice(weatherResult) {
    var tempRange = getTemperatureRange(weatherResult);
    if(tempRange.hasBigChanges){
        return "‚ö†Ô∏è –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –Ω–∞ –Ω–µ–¥–µ–ª–µ –±–æ–ª—å—à–æ–π –ø–µ—Ä–µ–ø–∞–¥ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä (" + tempRange.range + "¬∞C) - –≥–æ—Ç–æ–≤—å—Ç–µ —Ä–∞–∑–Ω—É—é –æ–¥–µ–∂–¥—É";
    } else {
        return "üìä –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –±—É–¥–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏";
    }
}